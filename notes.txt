Checklist:
    - list of subtasks with optional heading to separate
      subtasks into sections

RepeatType:
    - Can repeat Daily, Weekly, Monthly, Yearly, etc.
    - Should be able to add new repeat types without breaking
      Open/Close principle of SOLID.

ToDo: Information Holder
    title = string
    description = string
    dueDate = date
    repeatType = RepeatType
    priority = Priority.Medium (default value)
    notes = string
    checklist/subtasks = Checklist

PriorityLevel = {
    Base: 0 -> white
    Low: 1 -> yellow
    Medium: 2 -> orange
    High: 3 -> red-brown
}
NOTE: Add ability to add new priority levels?

Project:
    ToDos = ToDo[]
    color = string representation of color used in CSS
    deleteToDo(toDo)
    createToDo()

- Create default project to hold all ToDo's

App Logic:
    createToDo()
    updateToDoComplete(bIsComplete = true)
    updateToDoPriority(newPriority)
    reorderToDo(todo, newIndex)

DOM Logic:
    viewAllProjects()
    viewAllToDosInProject(project)

Filters:
    - Today: 
        - Display all ToDos with dueDateTime of current day
    - Upcoming: 
        - Display calendar style slider on top displaying tabs for seven days 
          with current day in third position. Last two previous days are shown by default.
        - Can slide the calendar left or right to display tabs for days earlier or later.

What would I do different?

- Didn't spend enough time initially to work out different objects and their relationships before even 
starting to code. Decided midway to frame custom DOM component objects like basic React Components, even 
trying to incorporate a single props object being passed as an argument rather than passing individual
properties used by the component.

6/15/22

- ISSUE: Deleting any ToDo will remove the project from the SideNav

6/14/22

- Add completed checkmark functionality. Should save completed and deleted ToDos for a limited time?

X Add confirmation modal when click delete on ToDo.

- Create DOMComponent abstract class with element property, render() method, and refresh() method.
Extend this class in each <NAME>Component object. 

X Instead of creating FilterType whenever new project is created, get all projects and create 
SideNavLinks on every render.

6/12/22

- Move functionality from inside ToDo that uses ToDoLocalStroge to update storage into ToDoApp.addToDo method.

6/6/22

- Add validator to create ToDo form to check if new project name already exists.

- ISSUE: Resetting form with New Project Name input enabled does NOT hide the element
and set disabled to true. 
SOLUTION: Add 'reset' event listener to form.

6/3/22

X ToDo has one-way ForeignKey relationship with ToDoProject, so 'project' property should be kept in ToDo
instead of 'todos' property in ToDoProject. Then can more easily move ToDoProjectComponent functionality 
into FilterTypeComponent. 

6/1/22

X Combine functionality of FilterTypeComponent and ToDoProjectComponent?

5-30-22

- Use same createToDoComponent when adding a ToDo from Project page AND editing existing ToDo
by passing in object with different key/values to change certain values or methods inside 
componnent.
    - Quick ToDo
        - Default form values
        - 'Add' text to submit button
    - Add ToDo To Project
        - Default form values except project selection
        - 'Add' text to submit button
    - Edit ToDo
        - Existing values of ToDo
        - 'Update' text to submit button

- Create optgroup for CreateToDo form to hold 'project' and optional 'new-project-name'
that is hidden when disabled and slides into view when enabled.

5-28-22

X Inside form to create new ToDo for the 'Project' field, if 'Add New Project' is selected,
open new field below to get new project name.